/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import entities.Trip;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.TripDAO;
import models.TripSQLite;

/**
 *
 * @author tegar
 */
public class TripManagementPanel extends javax.swing.JPanel {

    /**
     * Creates new form TripManagementPanel
     */
    private TripDAO tripDAO;
    
    public TripManagementPanel() {
        initComponents();
        tripDAO = new TripSQLite();
        loadTripData();
    }
    private void loadTripData() {
        try {
            List<Trip> trips = tripDAO.getAllTrips();
            DefaultTableModel model = (DefaultTableModel) tblTripData.getModel();
            model.setRowCount(0); // Clear existing data
            for (Trip trip : trips) {
                Object[] row = {
                    model.getRowCount() + 1,
                    trip.getId(),
                    trip.getRoute(),
                    trip.getSchedule(),
                    trip.getStatus(),
                    trip.getTicketAmount(),
                    trip.getPrice()
                };
                model.addRow(row);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblTripData = new javax.swing.JTable();
        jScrollBar1 = new javax.swing.JScrollBar();
        btnAddTrip = new javax.swing.JButton();
        btnUpdateTrip = new javax.swing.JButton();
        btnDeleteTrip = new javax.swing.JButton();
        btnSearchTrip = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSchedule = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTrip = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtTicketAmount = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnRefreshTabel = new javax.swing.JButton();

        tblTripData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "ID", "Rute", "Jadwal", "Status", "Jumlah Tiket", "Harga"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTripData);

        btnAddTrip.setBackground(new java.awt.Color(102, 255, 204));
        btnAddTrip.setText("Tambah");
        btnAddTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTripActionPerformed(evt);
            }
        });

        btnUpdateTrip.setBackground(new java.awt.Color(153, 204, 255));
        btnUpdateTrip.setText("Perbarui");
        btnUpdateTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTripActionPerformed(evt);
            }
        });

        btnDeleteTrip.setBackground(new java.awt.Color(255, 204, 204));
        btnDeleteTrip.setText("Hapus");
        btnDeleteTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTripActionPerformed(evt);
            }
        });

        btnSearchTrip.setText("Cari");
        btnSearchTrip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchTripActionPerformed(evt);
            }
        });

        jLabel2.setText("Jadwal");

        jLabel3.setText("Harga");

        jLabel4.setText("Rute");

        jLabel5.setText("ID");

        jLabel6.setText("Jumlah");

        btnRefreshTabel.setText("Refresh");
        btnRefreshTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTrip, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(btnSearchTrip))
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTicketAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddTrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdateTrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDeleteTrip)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRefreshTabel))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTrip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(btnSearchTrip))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSchedule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTicketAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddTrip)
                    .addComponent(btnUpdateTrip)
                    .addComponent(btnDeleteTrip)
                    .addComponent(btnRefreshTabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchTripActionPerformed
        try {
            String route = txtTrip.getText().trim(); // Get the route text from the text field
            
            if (route.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter a route to search.");
                return;
            }
            
            // Perform the search
            List<Trip> trips = tripDAO.getAllTrips();
            DefaultTableModel model = (DefaultTableModel) tblTripData.getModel();
            model.setRowCount(0); // Clear existing data
            
            for (Trip trip : trips) {
                if (trip.getRoute().equalsIgnoreCase(route)) {
                    model.addRow(new Object[]{trip.getId(), trip.getRoute(), trip.getSchedule(), trip.getPrice()});
                }
            }
            
            if (model.getRowCount() == 0) {
                JOptionPane.showMessageDialog(this, "No trips found for route: " + route);
            }
        } catch (SQLException ex) {
            Logger.getLogger(TripManagementPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchTripActionPerformed

    private void btnAddTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTripActionPerformed
        try {
            Trip trip = new Trip(
                txtID.getText(),
                txtTrip.getText(),
                txtSchedule.getText(),
                "", // Status will be set in DAO
                Integer.parseInt(txtTicketAmount.getText()),
                Double.parseDouble(txtPrice.getText())
            );
            tripDAO.addTrip(trip);
            loadTripData();
            clearInputFields();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid number format");
        }
    }//GEN-LAST:event_btnAddTripActionPerformed

    private void btnUpdateTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTripActionPerformed
        try {
            Trip trip = new Trip(
                txtID.getText(),
                txtTrip.getText(),
                txtSchedule.getText(),
                "", // Status will be set in DAO
                Integer.parseInt(txtTicketAmount.getText()),
                Double.parseDouble(txtPrice.getText())
            );
            tripDAO.updateTrip(trip);
            loadTripData();
            clearInputFields();
        } catch (SQLException e) {
            e.printStackTrace();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid number format");
        }
    }//GEN-LAST:event_btnUpdateTripActionPerformed

    private void btnDeleteTripActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTripActionPerformed

        try {
            String id = txtID.getText();
            tripDAO.deleteTrip(id);
            loadTripData();
            clearInputFields();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    
    }//GEN-LAST:event_btnDeleteTripActionPerformed

    private void btnRefreshTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTabelActionPerformed
        loadTripData();
    }//GEN-LAST:event_btnRefreshTabelActionPerformed
    
    private void clearInputFields() {
        txtID.setText("");
        txtTrip.setText("");
        txtSchedule.setText("");
        txtPrice.setText("");
        txtTicketAmount.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTrip;
    private javax.swing.JButton btnDeleteTrip;
    private javax.swing.JButton btnRefreshTabel;
    private javax.swing.JButton btnSearchTrip;
    private javax.swing.JButton btnUpdateTrip;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTripData;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSchedule;
    private javax.swing.JTextField txtTicketAmount;
    private javax.swing.JTextField txtTrip;
    // End of variables declaration//GEN-END:variables
}
