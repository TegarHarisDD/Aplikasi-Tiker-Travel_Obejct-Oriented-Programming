package GUI;

import entities.Booking;
import entities.Trip;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.BookingDAO;
import models.BookingSQLite;
import models.TripDAO;
import models.TripSQLite;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author tegar
 */
public class SalesReportingPanel extends javax.swing.JPanel {

    /**
     * Creates new form SalesReportingPanel
     */
    private BookingDAO bookingDAO;
    private TripDAO tripDAO;
    
    public SalesReportingPanel() {
        bookingDAO = new BookingSQLite();
        tripDAO = new TripSQLite();
        initComponents();
        loadBookingData();
    }
    private void loadBookingData() {
        try {
            List<Booking> bookings = bookingDAO.getAllBookings();
            DefaultTableModel model = (DefaultTableModel) tblBookingData.getModel();
            model.setRowCount(0); // Clear existing data
            int no = 1;
            for (Booking booking : bookings) {
                model.addRow(new Object[]{
                    no++,
                    booking.getId(),
                    booking.getTripId(),
                    booking.getCustomerName(),
                    booking.getCustomerContact(),
                    booking.getBookingDate(),
                    booking.getBuyAmount()
                });
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void deleteBooking(int bookingId) {
        try {
            Booking booking = bookingDAO.getBookingById(bookingId);
            if (booking != null) {
                // Update the trip's ticket amount
                Trip trip = tripDAO.getTripById(booking.getTripId());
                if (trip != null) {
                    trip.setTicketAmount(trip.getTicketAmount() + booking.getBuyAmount());
                    tripDAO.updateTrip(trip);
                }
                // Delete the booking
                bookingDAO.deleteBooking(bookingId);
                JOptionPane.showMessageDialog(this, "Booking deleted successfully!");
                loadBookingData();
            } else {
                JOptionPane.showMessageDialog(this, "Booking not found!");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void generateDailySalesReport() {
        String today = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM-dd"));
        String fileName = "DailySalesReport_" + today + ".csv";
        generateSalesReport(today, fileName);
    }

    private void generateMonthlySalesReport() {
        String thisMonth = LocalDate.now().format(DateTimeFormatter.ofPattern("yyyy-MM"));
        String fileName = "MonthlySalesReport_" + thisMonth + ".csv";
        generateSalesReport(thisMonth, fileName);
    }

    private void generateSalesReport(String dateOrMonth, String fileName) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(fileName))) {
            DefaultTableModel model = (DefaultTableModel) tblBookingData.getModel();

            // Write header
            writer.write("No,ID Transaksi,ID Rute,Nama,Kontak,Tanggal,Tiket Dibeli\n");

            // Write data rows
            for (int i = 0; i < model.getRowCount(); i++) {
                String bookingDate = model.getValueAt(i, 5).toString();
                if (bookingDate.startsWith(dateOrMonth)) {
                    for (int j = 0; j < model.getColumnCount(); j++) {
                        writer.write(model.getValueAt(i, j).toString());
                        if (j < model.getColumnCount() - 1) {
                            writer.write(",");
                        }
                    }
                    writer.write("\n");
                }
            }

            JOptionPane.showMessageDialog(this, "Sales report saved successfully!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Failed to save sales report: " + e.getMessage());
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblBookingData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtBookingID = new javax.swing.JTextField();
        btnDeleteBooking = new javax.swing.JButton();
        btnSalesReportDaily = new javax.swing.JButton();
        btnSalesReportMonthly = new javax.swing.JButton();
        btnRefreshTabel = new javax.swing.JButton();

        tblBookingData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "No", "ID Transaksi", "ID Rute", "Nama", "Kontak", "Tanggal", "Tiket Dibeli"
            }
        ));
        jScrollPane1.setViewportView(tblBookingData);

        jLabel1.setText("ID Transaksi");

        txtBookingID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookingIDActionPerformed(evt);
            }
        });

        btnDeleteBooking.setText("Hapus");
        btnDeleteBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookingActionPerformed(evt);
            }
        });

        btnSalesReportDaily.setText("Laporan Harian");
        btnSalesReportDaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportDailyActionPerformed(evt);
            }
        });

        btnSalesReportMonthly.setText("Laporan Bulanan");
        btnSalesReportMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalesReportMonthlyActionPerformed(evt);
            }
        });

        btnRefreshTabel.setText("Refresh");
        btnRefreshTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshTabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnSalesReportDaily)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSalesReportMonthly)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRefreshTabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtBookingID, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3)
                                .addComponent(btnDeleteBooking))
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBookingID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteBooking)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalesReportDaily)
                    .addComponent(btnSalesReportMonthly)
                    .addComponent(btnRefreshTabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBookingIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookingIDActionPerformed
        
    }//GEN-LAST:event_txtBookingIDActionPerformed

    private void btnSalesReportDailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportDailyActionPerformed
        generateDailySalesReport();
    }//GEN-LAST:event_btnSalesReportDailyActionPerformed

    private void btnDeleteBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookingActionPerformed
        try {
            int bookingId = Integer.parseInt(txtBookingID.getText());
            deleteBooking(bookingId);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Booking ID!");
        }
    }//GEN-LAST:event_btnDeleteBookingActionPerformed

    private void btnSalesReportMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalesReportMonthlyActionPerformed
        generateMonthlySalesReport();
    }//GEN-LAST:event_btnSalesReportMonthlyActionPerformed

    private void btnRefreshTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshTabelActionPerformed
        loadBookingData();
    }//GEN-LAST:event_btnRefreshTabelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteBooking;
    private javax.swing.JButton btnRefreshTabel;
    private javax.swing.JButton btnSalesReportDaily;
    private javax.swing.JButton btnSalesReportMonthly;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblBookingData;
    private javax.swing.JTextField txtBookingID;
    // End of variables declaration//GEN-END:variables
}
